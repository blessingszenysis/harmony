#!/bin/bash -eu
set -o pipefail

source "${PIPELINE_UTILS_DIR}/bash/common.sh"

SetupEnvForPyPy

# Clean up old files from multiple runs.
rm -f "${PIPELINE_TMP_DIR}"/locations_birthplace_*.csv
rm -f "${PIPELINE_TMP_DIR}"/fields_birthplace_*.csv
rm -f "${PIPELINE_TMP_DIR}"/processed_data_birthplace_*.json.lz4

# Track background process IDs so that we can reliably capture exit code
pids=()

count=0
for data_file in "${PIPELINE_TMP_DIR}"/sinasc_converted_*.csv.lz4 ; do
  "${PIPELINE_SRC_ROOT}/data/pipeline/scripts/process_csv.py" \
    --date 'date' \
    --prefix 'sinasc_birthplace' \
    --sourcename 'sinasc' \
    --set_cols 'nascimentos:1' \
    --fields 'nascimentos' \
    --rename_cols \
      'CODMUNNASC:MunicipalityName' \
    --multi_value_dimensions \
      'CodigoAnomaliaMultiValue:CodigoAnomaliaMultiValue0,CodigoAnomaliaMultiValue1,CodigoAnomaliaMultiValue2,CodigoAnomaliaMultiValue3,CodigoAnomaliaMultiValue4' \
      'CodigoAnomaliaGroup:CodigoAnomaliaMultiValue0_group,CodigoAnomaliaMultiValue1_group,CodigoAnomaliaMultiValue2_group,CodigoAnomaliaMultiValue3_group,CodigoAnomaliaMultiValue4_group' \
      'CodigoAnomaliaPriority:CodigoAnomaliaMultiValue0_priority,CodigoAnomaliaMultiValue1_priority,CodigoAnomaliaMultiValue2_priority,CodigoAnomaliaMultiValue3_priority,CodigoAnomaliaMultiValue4_priority' \
    --disable_rollup \
    --input="${data_file}" \
    --output_locations="${PIPELINE_TMP_DIR}/locations_birthplace_${count}.csv" \
    --output_fields="${PIPELINE_TMP_DIR}/fields_birthplace_${count}.csv" \
    --output_rows="${PIPELINE_TMP_DIR}/processed_data_birthplace_${count}.json.lz4" \
  | TagLines "$(basename "${data_file}")" &
  pids+=("$!")

  count=$((count + 1))
done

# Wait on each background process individually so that non-zero exit codes
# will be raised
WaitMultipleThreads "${pids[@]}"
