version: "3.7"

x-logging:
  &default-logging
  driver: "json-file"
  options:
    max-size: 10m
    max-file: "10"

services:
  web:
    image: ${DOCKER_NAMESPACE}/harmony-web:${DOCKER_TAG}
    restart: always
    pull_policy: always
    ports:
      - 5000:5000
    environment:
      - ZEN_ENV=${ZEN_ENV}
      - DONT_SYNC_SOURCEMAPS=true
      - DATABASE_URL=${DATABASE_URL}
      - HSTS=off
      - SSL_POLICY=Mozilla-Modern
      - VIRTUAL_HOST=${ZEN_WEB_HOST}
      - LETSENCRYPT_HOST=${ZEN_WEB_HOST}
      - LETSENCRYPT_EMAIL=${ZEN_WEB_EMAIL}
      - ZEN_HOME=/zenysis
      - DRUID_HOST=${DRUID_HOST}
    volumes:
      - ${OUTPUT_PATH}:/data/output
      - ${OUTPUT_PATH}/logs:/logs
      - ${INSTANCE_CONFIG}:/zenysis/instance_config.json
      - ${GLOBAL_CONFIG}:/zenysis/global_config.py
      - ${UPLOADS_DIR}:/zenysis/uploads
    command: [ "/zenysis/docker/entrypoint_web.sh" ]
    logging: *default-logging
    platform: linux/amd64

  worker:
    image: ${DOCKER_NAMESPACE}/harmony-web:${DOCKER_TAG}
    restart: always
    pull_policy: always
    ports:
      - 61234:61234
    environment:
      - ZEN_ENV=${ZEN_ENV}
      - ZEN_LOG_CFG=/zenysis/log/log.prod-stackdriver.cfg
      - BROKER_URL=redis://redis:6379/0
      - DATABASE_URL=${DATABASE_URL}
    volumes:
      - ${OUTPUT_PATH}/logs:/logs
      - ${INSTANCE_CONFIG}:/zenysis/instance_config.json
      - ${GLOBAL_CONFIG}:/zenysis/global_config.py
    command:
      [
        "celery",
        "-A",
        "web.background_worker.celery",
        "worker",
        "--beat",
        "--loglevel=INFO"
      ]
    logging: *default-logging
    platform: linux/amd64

  web-renderer:
    image: zengineering/url-to-pdf-api:latest
    restart: always
    pull_policy: always
    ports:
      - 9000:9000
    environment:
      - ALLOW_HTTP=true
      - PORT=9000
    platform: linux/amd64

  redis:
    image: redis:latest
    restart: always
    pull_policy: always
    ports:
      - 6379:6379

  hasura:
    image: hasura/graphql-engine:v2.11.3.cli-migrations-v2
    restart: always
    pull_policy: always
    ports:
      - 8080:8080
    environment:
      - HASURA_GRAPHQL_ENABLE_TELEMETRY=false
      - HASURA_GRAPHQL_MIGRATIONS_SERVER_TIMEOUT=500
      - HASURA_GRAPHQL_DATABASE_URL=${DATABASE_URL}
    volumes:
      - ${OUTPUT_PATH}/logs:/logs
